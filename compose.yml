version: "3.8"
services:
  db:
    image: postgres:15
    container_name: db
    env_file:
      - ./.env-docker
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
     - 5432:5432

  redis:
    image: redis:7
    container_name: redis
    depends_on:
      - db
    env_file:
      - ./.env
    ports:
     - 6379:6379

  app:
    build:
      context: .
    container_name: app
    restart: always
    volumes:
      - app_static:/my_booking/api/static/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env-docker
    command: ['/my_booking/docker/app.sh']
    ports:
      - 8000:8000

  celery:
    build:
      context: .
    container_name: celery
    command: ['/my_booking/docker/celery.sh', 'celery']
    # command: celery -A api.celery_tasks.c_app worker --loglevel=INFO
    depends_on:
      - redis
    env_file:
      - ./.env

  flower:
    build:
      context: .
    container_name: flower
    command: ['/my_booking/docker/celery.sh', 'flower']
    # command: celery -A api.tasks.celery:celery flower
    depends_on:
      - redis
      - celery
    env_file:
      - ./.env
    ports:
      - 5555:5555

#  prometheus:
#    image: prom/prometheus:v2.43.0
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
#    restart: unless-stopped
#    ports:
#      - 9090:9090
#
#  grafana:
#    image: grafana/grafana:9.4.7
#    container_name: grafana
#    volumes:
#      - grafana_data:/var/lib/grafana
#    restart: unless-stopped
#    ports:
#      - 3000:3000

volumes:
  postgres_data:
  app_static:
#  grafana_data:
#  prometheus_data:
