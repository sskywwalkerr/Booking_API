version: "3.8"
services:
  app:
    build:
      context: .
    container_name: app
    restart: always
    volumes:
      - app_static:/my_booking/api/static/
    depends_on:
      - db
      - redis
    env_file:
      - ./.env-docker
    command: [ '/my_booking/docker/app.sh' ]
    ports:
      - "8000:8000"
    networks:
      - app-network

  db:
    image: postgres:15
    container_name: db
    env_file:
      - ./.env-docker
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
     - "5432:5432"
    networks:
      - app-network

  redis:
    image: redis:7
    container_name: redis
    depends_on:
      - db
    env_file:
      - ./.env
    ports:
     - "6379:6379"
    networks:
      - app-network

  celery:
    build:
      context: .
    container_name: celery
    command: ['/my_booking/docker/celery.sh', 'celery']
    # command: celery -A api.celery_tasks.c_app worker --loglevel=INFO
    depends_on:
      - redis
    env_file:
      - ./.env
    networks:
      - app-network

  flower:
    build:
      context: .
    container_name: flower
    command: ['/my_booking/docker/celery.sh', 'flower']
    # command: celery -A api.tasks.celery:celery flower
    depends_on:
      - redis
      - celery
    env_file:
      - ./.env
    ports:
      - "5555:5555"
    networks:
      - app-network

volumes:
  postgres_data:
  app_static:
  redis_data:
  celery_logs:

networks:
  app-network:
    driver: bridge
